Signin :

	package com.example.projectmanagementsystem;

	import androidx.annotation.NonNull;
	import androidx.appcompat.app.AlertDialog;
	import androidx.appcompat.app.AppCompatActivity;

	import android.content.Context;
	import android.content.DialogInterface;
	import android.content.Intent;
	import android.content.SharedPreferences;
	import android.net.ConnectivityManager;
	import android.net.NetworkInfo;
	import android.os.Build;
	import android.os.Bundle;
	import android.preference.PreferenceManager;
	import android.provider.Settings;
	import android.view.View;
	import android.widget.Button;
	import android.widget.CheckBox;
	import android.widget.ProgressBar;
	import android.widget.Toast;

	import com.google.android.material.textfield.TextInputLayout;
	import com.google.firebase.database.DataSnapshot;
	import com.google.firebase.database.DatabaseError;
	import com.google.firebase.database.DatabaseReference;
	import com.google.firebase.database.FirebaseDatabase;
	import com.google.firebase.database.Query;
	import com.google.firebase.database.ValueEventListener;
	public class signin extends AppCompatActivity {
	TextInputLayout xid, xpassword;
	Button sub;
	CheckBox remember;
	private ProgressBar spinner;
	FirebaseDatabase rootNode;
	SharedPreferences sharedpreferences;
	public static String MyPREFERENCES = "MyPrefs";
	String sid="";
	DatabaseReference reference;
    	@Override
	protected void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_signin);
	xpassword = findViewById(R.id.password);
	xid = findViewById(R.id.gid);
	remember = findViewById(R.id.remember);
	sub=findViewById(R.id.submit) ;
	spinner =findViewById(R.id.progressBar1);
	}
	public void signindone(View v) {
	spinner.setVisibility(View.VISIBLE);
	sub.setVisibility(View.GONE);
	spinner.requestFocus();
	String upassword = xpassword.getEditText().getText().toString();
	String uid = xid.getEditText().getText().toString().toUpperCase();
	if(! isConnected(signin.this)){
	showcustomalert();
	}
	if (!validateid() | !validatepassword()) {
	spinner.setVisibility(View.GONE);
	sub.setVisibility(View.VISIBLE);
	return;
	}
	rootNode = FirebaseDatabase.getInstance();
	reference = rootNode.getReference("signin");
	Query checkuser = reference.orderByChild("id").equalTo(uid);
	checkuser.addListenerForSingleValueEvent(new ValueEventListener() {
	@Override
	public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
	if (dataSnapshot.exists()) {
	String Dpassword = dataSnapshot.child(uid).child("password").getValue().toString().trim();
	String Did = dataSnapshot.child(uid).child("id").getValue().toString().trim();
	String Dstatus = dataSnapshot.child(uid).child("status").getValue().toString().trim();
	if (Dpassword.equals(upassword)) {
	if (Dstatus.equals("0")) {
	xpassword.getEditText().setText("");

Toast.makeText(signin.this,"STUDENT",Toast.LENGTH_LONG).show();
	Intent i = new Intent(signin.this, studentdashboard.class);
	Did=Did.toUpperCase();
	i.putExtra("name",Did);
	sid=Did;
	spinner.setVisibility(View.GONE);
	sub.setVisibility(View.VISIBLE);
	session();
    	startActivity(i);
❖	} else if (Dstatus.equals("1")) {
❖	xpassword.getEditText().setText("");
❖	Intent i = new Intent(signin.this, teacherdashboard.class);
❖	Did=Did.toUpperCase();
❖	i.putExtra("name",Did);
❖	spinner.setVisibility(View.GONE);
❖	sub.setVisibility(View.VISIBLE);
❖	session();
❖
Toast.makeText(signin.this,"Teacher",Toast.LENGTH_LONG).show();
❖	startActivity(i);
❖	}
❖	} else {
❖	passworderror();
❖	}
❖	} else {
❖	usererror();
❖	}
❖	}
❖	@Override
❖	public void onCancelled(@NonNull DatabaseError databaseError) {
❖	}
❖	});
❖	}
❖	private boolean isConnected(signin signin) {
❖		ConnectivityManager connectivityManager= (ConnectivityManager) signin.getSystemService(Context.CONNECTIVITY_SERVICE);
❖		NetworkInfo wificonn=connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
❖		NetworkInfo mobileconn=connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
❖		if((wificonn !=null && wificonn.isConnected()) || (mobileconn !=null && mobileconn.isConnected()))
❖	{
❖	return true;
❖	}
❖	else {
❖	return false;
❖	}
❖	}
❖	private void showcustomalert() {
❖	spinner.setVisibility(View.GONE);
❖	sub.setVisibility(View.VISIBLE);
❖	AlertDialog.Builder builder=new AlertDialog.Builder(signin.this);
❖	builder.setMessage("Please connect to a network")
❖	.setCancelable(false)
❖	.setPositiveButton("Connect", new DialogInterface.OnClickListener() {
❖	@Override
❖	public void onClick(DialogInterface dialog, int which) {
  ❖	startActivity(new Intent(Settings.ACTION_WIFI_SETTINGS));
❖	}
❖	})
❖	.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
❖	@Override
❖	public void onClick(DialogInterface dialog, int which) {
❖	startActivity(new Intent(getApplicationContext(),signin.class));
❖	finish();
❖	}
❖	}).show();
❖	}
❖	public Boolean validateid(){
❖	String nameval = xid.getEditText().getText().toString();
❖	if(nameval.isEmpty()){
❖	xid.setError("Field cannot be empty");
❖	return false;
❖	}
❖	else {
❖	xid.setError(null);
❖	return true;
❖	}
❖	}
❖	public Boolean validatepassword(){
❖	String nameval = xpassword.getEditText().getText().toString();
❖	if(nameval.isEmpty()){
❖	xpassword.setError("Field cannot be empty");
❖	return false;
❖	} else if(nameval.length() < 6){
❖	xpassword.setError("should be greater than 6 digits");
❖	return false;
❖	}
❖	else {
❖	xpassword.setError(null);
❖	return true;
❖	}
❖	}
❖	public void usererror(){
❖	spinner.setVisibility(View.GONE);
❖	sub.setVisibility(View.VISIBLE);
❖	Toast.makeText(this,"Please check the Group ID",Toast.LENGTH_LONG).show();
❖	xid.getEditText().setText("");
❖	xid.setError("Please enter correct Group ID");
❖	xpassword.getEditText().setText("");
❖	xid.getEditText().setText("");
❖	}
❖	public void passworderror(){
❖	spinner.setVisibility(View.GONE);
❖	sub.setVisibility(View.VISIBLE);

❖	Toast.makeText(this,"Please check the password",Toast.LENGTH_LONG).show();
❖	xpassword.getEditText().setText("");
❖	xpassword.setError("Please enter correct Password");
❖	}
❖	public void next(View v){
❖	Intent i=new Intent(signin.this,signup.class);
❖	startActivity(i);
❖	}
❖	private void session() {
❖
❖	sharedpreferences = getSharedPreferences(MyPREFERENCES, Context.MODE_PRIVATE);
❖	SharedPreferences.Editor editor = sharedpreferences.edit();
❖	editor.putString("good", sid);
❖	editor.commit();
❖	}
❖	}



